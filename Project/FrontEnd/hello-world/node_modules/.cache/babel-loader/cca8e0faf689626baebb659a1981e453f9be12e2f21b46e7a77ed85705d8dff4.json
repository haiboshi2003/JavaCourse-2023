{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 学科名称 \"), _createVNode(_component_el_input, {\n    modelValue: $setup.requestdata.projectName,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.requestdata.projectName = $event),\n    placeholder: \"请输入学科名称\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 题目名称 \"), _createVNode(_component_el_input, {\n    modelValue: $setup.requestdata.titleName,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.requestdata.titleName = $event),\n    placeholder: \"请输入题目名称\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 文字题干 \"), _createVNode(_component_el_input, {\n    modelValue: $setup.requestdata.textdata,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.requestdata.textdata = $event),\n    autosize: {\n      minRows: 2,\n      maxRows: 4\n    },\n    type: \"textarea\",\n    placeholder: \"请输入题干\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 题目额外信息 \"), _createVNode(_component_el_input, {\n    modelValue: $setup.requestdata.description,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.requestdata.description = $event),\n    autosize: {\n      minRows: 2,\n      maxRows: 4\n    },\n    type: \"textarea\",\n    placeholder: \"请输入题目额外的描述信息\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 上传图像文件 \"), _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"imgFileInput\",\n    onChange: $setup.handleImgFileChange\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createCommentVNode(\" 上传图形文件 \"), _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"svgFileInput\",\n    onChange: $setup.handleSvgFileChange\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createCommentVNode(\" 上传语音文件 \"), _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"voiceFileInput\",\n    onChange: $setup.handleVoiceFileChange\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: $setup.sendToBackend\n  }, \"cilck\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode","_createVNode","_component_el_input","$setup","requestdata","projectName","$event","placeholder","titleName","textdata","autosize","minRows","maxRows","type","description","_createElementVNode","ref","onChange","handleImgFileChange","handleSvgFileChange","handleVoiceFileChange","onClick","sendToBackend"],"sources":["H:\\GitHub-Repository\\hengsheng\\hello-world\\src\\components\\addtitle.vue"],"sourcesContent":["<template>\r\n  <!-- 学科名称 -->\r\n  <el-input v-model=\"requestdata.projectName\" placeholder=\"请输入学科名称\" />\r\n  <!-- 题目名称 -->\r\n  <el-input v-model=\"requestdata.titleName\" placeholder=\"请输入题目名称\" />\r\n\r\n  <!-- 文字题干 -->\r\n  <el-input\r\n    v-model=\"requestdata.textdata\"\r\n    :autosize=\"{ minRows: 2, maxRows: 4 }\"\r\n    type=\"textarea\"\r\n    placeholder=\"请输入题干\"\r\n  />\r\n  <!-- 题目额外信息 -->\r\n  <el-input\r\n    v-model=\"requestdata.description\"\r\n    :autosize=\"{ minRows: 2, maxRows: 4 }\"\r\n    type=\"textarea\"\r\n    placeholder=\"请输入题目额外的描述信息\"\r\n  />\r\n\r\n  <!-- 上传图像文件 -->\r\n  <input type=\"file\" ref=\"imgFileInput\" @change=\"handleImgFileChange\" />\r\n\r\n  <!-- 上传图形文件 -->\r\n  <input type=\"file\" ref=\"svgFileInput\" @change=\"handleSvgFileChange\" />\r\n\r\n  <!-- 上传语音文件 -->\r\n  <input type=\"file\" ref=\"voiceFileInput\" @change=\"handleVoiceFileChange\" />\r\n\r\n  <button @click=\"sendToBackend\">cilck</button>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport axios from \"@/api/request\";\r\nimport { message } from \"ant-design-vue\";\r\n\r\nconst svgFileInput = ref(null); // 定义文件输入的引用\r\nconst imgFileInput = ref(null); // 定义文件输入的引用\r\nconst voiceFileInput = ref(null); // 定义文件输入的引用\r\n\r\nconst requestdata = ref({\r\n  titleName: \"\",\r\n  projectName: \"\",\r\n  description: \"\",\r\n\r\n  textdata: \"\",\r\n  imgfile: \"\",\r\n  svgfile: \"\",\r\n  voicefile: \"\",\r\n});\r\nfunction print() {\r\n  console.log(requestdata.value);\r\n}\r\n\r\nconst handleImgFileChange = () => {\r\n  requestdata.value.imgfile = Array.from(imgFileInput.value.files);\r\n};\r\n\r\nconst handleSvgFileChange = () => {\r\n  requestdata.value.svgfile = Array.from(svgFileInput.value.files);\r\n};\r\n\r\nconst handleVoiceFileChange = () => {\r\n  requestdata.value.voicefile = Array.from(voiceFileInput.value.files);\r\n};\r\n\r\nconst sendToBackend = () => {\r\n  if (!requestdata.value.titleName.trim()) {\r\n    message.error(\"题目名称不能为空\", 2);\r\n    return;\r\n  }\r\n\r\n  // 构建FormData对象\r\n  const formData = new FormData();\r\n  formData.append(\"titleName\", requestdata.value.titleName);\r\n  formData.append(\"textData\", requestdata.value.textdata);\r\n  formData.append(\"description\", requestdata.value.description);\r\n  if (requestdata.value.imgfile[0]) {\r\n    formData.append(\"imgFile\", requestdata.value.imgfile[0]);\r\n  }\r\n  if (requestdata.value.svgfile[0]) {\r\n    formData.append(\"svgFile\", requestdata.value.svgfile[0]);\r\n  }\r\n  if (requestdata.value.file[0]) {\r\n    formData.append(\"voiceFile\", requestdata.value.voicefile[0]);\r\n  }\r\n\r\n  console.log(requestdata.value.file);\r\n  console.log(formData);\r\n  // 发送POST请求\r\n  axios\r\n    .post(\"/title/add\", formData)\r\n    .then((response) => {\r\n      console.log(\"success Response from backend:\", response.data);\r\n      if (response.data.success == \"success\") {\r\n        message.success(\"添加题目成功\", 2);\r\n      } else {\r\n        message.error(response.data.message);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error sending data to backend:\", error.message);\r\n    });\r\n};\r\n</script>\r\n"],"mappings":";;;6DACEA,mBAAA,UAAa,EACbC,YAAA,CAAoEC,mBAAA;gBAAjDC,MAAA,CAAAC,WAAW,CAACC,WAAW;+DAAvBF,MAAA,CAAAC,WAAW,CAACC,WAAW,GAAAC,MAAA;IAAEC,WAAW,EAAC;2CACxDP,mBAAA,UAAa,EACbC,YAAA,CAAkEC,mBAAA;gBAA/CC,MAAA,CAAAC,WAAW,CAACI,SAAS;+DAArBL,MAAA,CAAAC,WAAW,CAACI,SAAS,GAAAF,MAAA;IAAEC,WAAW,EAAC;2CAEtDP,mBAAA,UAAa,EACbC,YAAA,CAKEC,mBAAA;gBAJSC,MAAA,CAAAC,WAAW,CAACK,QAAQ;+DAApBN,MAAA,CAAAC,WAAW,CAACK,QAAQ,GAAAH,MAAA;IAC5BI,QAAQ,EAAE;MAAAC,OAAA;MAAAC,OAAA;IAAA,CAA0B;IACrCC,IAAI,EAAC,UAAU;IACfN,WAAW,EAAC;2CAEdP,mBAAA,YAAe,EACfC,YAAA,CAKEC,mBAAA;gBAJSC,MAAA,CAAAC,WAAW,CAACU,WAAW;+DAAvBX,MAAA,CAAAC,WAAW,CAACU,WAAW,GAAAR,MAAA;IAC/BI,QAAQ,EAAE;MAAAC,OAAA;MAAAC,OAAA;IAAA,CAA0B;IACrCC,IAAI,EAAC,UAAU;IACfN,WAAW,EAAC;2CAGdP,mBAAA,YAAe,EACfe,mBAAA,CAAsE;IAA/DF,IAAI,EAAC,MAAM;IAACG,GAAG,EAAC,cAAc;IAAEC,QAAM,EAAEd,MAAA,CAAAe;kDAE/ClB,mBAAA,YAAe,EACfe,mBAAA,CAAsE;IAA/DF,IAAI,EAAC,MAAM;IAACG,GAAG,EAAC,cAAc;IAAEC,QAAM,EAAEd,MAAA,CAAAgB;kDAE/CnB,mBAAA,YAAe,EACfe,mBAAA,CAA0E;IAAnEF,IAAI,EAAC,MAAM;IAACG,GAAG,EAAC,gBAAgB;IAAEC,QAAM,EAAEd,MAAA,CAAAiB;kDAEjDL,mBAAA,CAA6C;IAApCM,OAAK,EAAElB,MAAA,CAAAmB;EAAa,GAAE,OAAK,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}