{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"el-upload__tip text-red\"\n}, \" limit 1 file, new file will cover the old file \", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 题目编号 \"), _createVNode(_component_el_input, {\n    modelValue: $setup.requestdata.id,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.requestdata.id = $event),\n    class: \"w-50 m-2\",\n    size: \"large\",\n    style: {\n      \"width\": \"250px\",\n      \"height\": \"50px\"\n    },\n    placeholder: \"请输入题目编号\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 学科名称 \"), _createVNode(_component_el_input, {\n    modelValue: $setup.requestdata.projectName,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.requestdata.projectName = $event),\n    size: \"large\",\n    style: {\n      \"width\": \"250px\",\n      \"height\": \"50px\"\n    },\n    placeholder: \"请输入学科名称\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 题目名称 \"), _createVNode(_component_el_input, {\n    modelValue: $setup.requestdata.titleName,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.requestdata.titleName = $event),\n    size: \"large\",\n    style: {\n      \"width\": \"250px\",\n      \"height\": \"50px\"\n    },\n    placeholder: \"请输入题目名称\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 文字题干 \"), _createVNode(_component_el_input, {\n    modelValue: $setup.requestdata.textdata,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.requestdata.textdata = $event),\n    autosize: {\n      minRows: 2,\n      maxRows: 4\n    },\n    type: \"textarea\",\n    style: {\n      \"width\": \"500px\",\n      \"height\": \"100px\"\n    },\n    placeholder: \"请输入题干\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 题目额外信息 \"), _createVNode(_component_el_input, {\n    modelValue: $setup.requestdata.description,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.requestdata.description = $event),\n    autosize: {\n      minRows: 2,\n      maxRows: 4\n    },\n    type: \"textarea\",\n    style: {\n      \"width\": \"300px\",\n      \"height\": \"100px\"\n    },\n    placeholder: \"请输入题目额外的描述信息\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 上传图像文件 \"), _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"imgFileInput\",\n    onChange: $setup.handleImgFileChange\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createCommentVNode(\" 上传图形文件 \"), _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"svgFileInput\",\n    onChange: $setup.handleSvgFileChange\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createCommentVNode(\" 上传语音文件 \"), _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"voiceFileInput\",\n    onChange: $setup.handleVoiceFileChange\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: $setup.sendToBackend\n  }, \"自定义导入\"), _createVNode(_component_el_upload, {\n    ref: \"docxFileInput\",\n    limit: 1,\n    \"on-exceed\": $setup.handleExceed,\n    \"auto-upload\": false\n  }, {\n    trigger: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"large\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"select docxfile\")]),\n      _: 1 /* STABLE */\n    })]),\n    tip: _withCtx(() => [_hoisted_1]),\n    default: _withCtx(() => [_createElementVNode(\"button\", {\n      class: \"button\",\n      onClick: _cache[5] || (_cache[5] = (...args) => _ctx.submitUpload && _ctx.submitUpload(...args))\n    }, \"模板导入\")]),\n    _: 1 /* STABLE */\n  }, 512 /* NEED_PATCH */), _createCommentVNode(\" 题目编号 \"), _createVNode(_component_el_input, {\n    modelValue: $setup.docxdata.id,\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.docxdata.id = $event),\n    size: \"large\",\n    style: {\n      \"width\": \"250px\",\n      \"height\": \"50px\"\n    },\n    placeholder: \"请输入题目编号\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 上传docx文件 \"), _createCommentVNode(\" <input type=\\\"file\\\" ref=\\\"docxFileInput\\\" @change=\\\"handleDocxFileChange\\\" /> \"), _createCommentVNode(\" <button @click=\\\"docxsend\\\">模板导入</button> \")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_createCommentVNode","_createVNode","_component_el_input","$setup","requestdata","id","$event","size","style","placeholder","projectName","titleName","textdata","autosize","minRows","maxRows","type","description","ref","onChange","handleImgFileChange","handleSvgFileChange","handleVoiceFileChange","onClick","sendToBackend","_component_el_upload","limit","handleExceed","trigger","_withCtx","_component_el_button","tip","_hoisted_1","_cache","args","_ctx","submitUpload","docxdata"],"sources":["H:\\GitHub-Repository\\hengsheng\\hello-world\\src\\components\\addtitle.vue"],"sourcesContent":["<template>\r\n  <!-- 题目编号 -->\r\n  <el-input\r\n    v-model=\"requestdata.id\"\r\n    class=\"w-50 m-2\"\r\n    size=\"large\"\r\n    style=\"width: 250px; height: 50px\"\r\n    placeholder=\"请输入题目编号\"\r\n  />\r\n  <!-- 学科名称 -->\r\n  <el-input\r\n    v-model=\"requestdata.projectName\"\r\n    size=\"large\"\r\n    style=\"width: 250px; height: 50px\"\r\n    placeholder=\"请输入学科名称\"\r\n  />\r\n  <!-- 题目名称 -->\r\n  <el-input\r\n    v-model=\"requestdata.titleName\"\r\n    size=\"large\"\r\n    style=\"width: 250px; height: 50px\"\r\n    placeholder=\"请输入题目名称\"\r\n  />\r\n\r\n  <!-- 文字题干 -->\r\n  <el-input\r\n    v-model=\"requestdata.textdata\"\r\n    :autosize=\"{ minRows: 2, maxRows: 4 }\"\r\n    type=\"textarea\"\r\n    style=\"width: 500px; height: 100px\"\r\n    placeholder=\"请输入题干\"\r\n  />\r\n  <!-- 题目额外信息 -->\r\n  <el-input\r\n    v-model=\"requestdata.description\"\r\n    :autosize=\"{ minRows: 2, maxRows: 4 }\"\r\n    type=\"textarea\"\r\n    style=\"width: 300px; height: 100px\"\r\n    placeholder=\"请输入题目额外的描述信息\"\r\n  />\r\n\r\n  <!-- 上传图像文件 -->\r\n  <input type=\"file\" ref=\"imgFileInput\" @change=\"handleImgFileChange\" />\r\n\r\n  <!-- 上传图形文件 -->\r\n  <input type=\"file\" ref=\"svgFileInput\" @change=\"handleSvgFileChange\" />\r\n\r\n  <!-- 上传语音文件 -->\r\n  <input type=\"file\" ref=\"voiceFileInput\" @change=\"handleVoiceFileChange\" />\r\n\r\n  <button @click=\"sendToBackend\">自定义导入</button>\r\n\r\n  <el-upload\r\n    ref=\"docxFileInput\"\r\n    :limit=\"1\"\r\n    :on-exceed=\"handleExceed\"\r\n    :auto-upload=\"false\"\r\n  >\r\n    <template #trigger>\r\n      <el-button type=\"large\">select docxfile</el-button>\r\n    </template>\r\n    <button class=\"button\" @click=\"submitUpload\">模板导入</button>\r\n    <template #tip>\r\n      <div class=\"el-upload__tip text-red\">\r\n        limit 1 file, new file will cover the old file\r\n      </div>\r\n    </template>\r\n  </el-upload>\r\n\r\n  <!-- 题目编号 -->\r\n  <el-input\r\n    v-model=\"docxdata.id\"\r\n    size=\"large\"\r\n    style=\"width: 250px; height: 50px\"\r\n    placeholder=\"请输入题目编号\"\r\n  />\r\n\r\n  <!-- 上传docx文件 -->\r\n\r\n  <!-- <input type=\"file\" ref=\"docxFileInput\" @change=\"handleDocxFileChange\" /> -->\r\n  <!-- <button @click=\"docxsend\">模板导入</button> -->\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport axios from \"@/api/request\";\r\nimport { message } from \"ant-design-vue\";\r\nimport { notNullish } from \"@vueuse/core\";\r\n\r\nconst svgFileInput = ref(null); // 定义文件输入的引用\r\nconst imgFileInput = ref(null); // 定义文件输入的引用\r\nconst voiceFileInput = ref(null); // 定义文件输入的引用\r\nconst docxFileInput = ref(null); // 定义文件输入的引用\r\n\r\nconst requestdata = ref({\r\n  id: \"\",\r\n  titleName: \"\",\r\n  projectName: \"\",\r\n  description: \"\",\r\n\r\n  textdata: \"\",\r\n  imgfile: \"\",\r\n  svgfile: \"\",\r\n  voicefile: \"\",\r\n});\r\nconst docxdata = ref({\r\n  id: \"\",\r\n  docxFile: \"\",\r\n});\r\n\r\nconst handleImgFileChange = () => {\r\n  requestdata.value.imgfile = Array.from(imgFileInput.value.files);\r\n};\r\n\r\nconst handleSvgFileChange = () => {\r\n  requestdata.value.svgfile = Array.from(svgFileInput.value.files);\r\n};\r\n\r\nconst handleVoiceFileChange = () => {\r\n  requestdata.value.voicefile = Array.from(voiceFileInput.value.files);\r\n};\r\nconst handleDocxFileChange = () => {\r\n  docxdata.value.docxFile = Array.from(docxFileInput.value.files);\r\n};\r\nconst sendToBackend = () => {\r\n  if (requestdata.value.id == notNullish) {\r\n    message.error(\"题目编号不能为空\", 2);\r\n    return;\r\n  } else {\r\n    requestdata.value.id = parseInt(requestdata.value.id, 10);\r\n  }\r\n  if (!requestdata.value.titleName.trim()) {\r\n    message.error(\"题目名称不能为空\", 2);\r\n    return;\r\n  }\r\n  if (!requestdata.value.projectName.trim()) {\r\n    message.error(\"学科不能为空\", 2);\r\n    return;\r\n  }\r\n\r\n  // 构建FormData对象\r\n  const formData = new FormData();\r\n\r\n  formData.append(\"id\", requestdata.value.id);\r\n  formData.append(\"titleName\", requestdata.value.titleName);\r\n  formData.append(\"textData\", requestdata.value.textdata);\r\n  formData.append(\"projectName\", requestdata.value.projectName);\r\n  formData.append(\"description\", requestdata.value.description);\r\n  if (requestdata.value.imgfile[0]) {\r\n    formData.append(\"imgFile\", requestdata.value.imgfile[0]);\r\n  }\r\n  if (requestdata.value.svgfile[0]) {\r\n    formData.append(\"svgFile\", requestdata.value.svgfile[0]);\r\n  }\r\n  if (requestdata.value.voicefile[0]) {\r\n    formData.append(\"voiceFile\", requestdata.value.voicefile[0]);\r\n  }\r\n\r\n  console.log(requestdata.value.file);\r\n  console.log(formData);\r\n  // 发送POST请求\r\n  axios\r\n    .post(\"/title/add\", formData)\r\n    .then((response) => {\r\n      console.log(\"success Response from backend:\", response.data);\r\n      if (response.data.success == \"success\") {\r\n        message.success(\"添加题目成功\", 2);\r\n      } else {\r\n        message.error(response.data.message);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error sending data to backend:\", error.message);\r\n    });\r\n};\r\n\r\nconst docxsend = () => {\r\n  if (requestdata.value.id == notNullish) {\r\n    message.error(\"题目编号不能为空\", 2);\r\n    return;\r\n  } else {\r\n    docxdata.value.id = parseInt(docxdata.value.id, 10);\r\n  }\r\n  // 构建FormData对象\r\n  const formData = new FormData();\r\n\r\n  formData.append(\"id\", docxdata.value.id);\r\n  if (docxdata.value.docxFile[0]) {\r\n    formData.append(\"docxFile\", docxdata.value.docxFile[0]);\r\n  } else {\r\n    message.error(\"docx文件不能为空\");\r\n    return;\r\n  }\r\n  // 发送POST请求\r\n  axios\r\n    .post(\"/title/addModel\", formData)\r\n    .then((response) => {\r\n      console.log(\"success Response from backend:\", response.data);\r\n      if (response.data.success == \"success\") {\r\n        message.success(\"添加题目成功\", 2);\r\n      } else {\r\n        message.error(response.data.message);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error sending data to backend:\", error.message);\r\n    });\r\n};\r\n\r\nconst handleExceed = function (files) {\r\n  upload.value.clearFiles();\r\n  const file = files[0];\r\n  file.uid = genFileId();\r\n  upload.value.handleStart(file);\r\n};\r\n</script>\r\n\r\n<style>\r\n.button {\r\n  background-color: rgb(32, 229, 212);\r\n  color: white;\r\n  width: 80px;\r\n  height: 40px;\r\n  border: 0;\r\n  font-size: 14px;\r\n  border-radius: 30px;\r\n  transition: background-color 0.3s ease; /* 添加过渡效果 */\r\n  cursor: pointer; /* 将鼠标光标设为手型 */\r\n  margin: 0 20px; /* 调整按钮之间的水平间隔 */\r\n}\r\n\r\n.button:active {\r\n  background-color: #08ab9e; /* 按下时的背景色 */\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}