{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.titleName = $event),\n    placeholder: \"Title Name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.titleName]]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.titleDescription = $event),\n    placeholder: \"Title Description\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.titleDescription]]), _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"fileInput\",\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.handleFileChange && $options.handleFileChange(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.uploadFile && $options.uploadFile(...args))\n  }, \"Upload\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","type","$data","titleName","$event","placeholder","titleDescription","ref","onChange","_cache","args","$options","handleFileChange","onClick","uploadFile"],"sources":["H:\\GitHub-Repository\\hengsheng\\hello-world\\src\\components\\Add-product.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <input type=\"text\" v-model=\"titleName\" placeholder=\"Title Name\" />\r\n    <textarea\r\n      v-model=\"titleDescription\"\r\n      placeholder=\"Title Description\"\r\n    ></textarea>\r\n    <input type=\"file\" ref=\"fileInput\" @change=\"handleFileChange\" />\r\n\r\n    <button @click=\"uploadFile\">Upload</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      titleName: \"\",\r\n      titleDescription: \"\",\r\n      file: null,\r\n    };\r\n  },\r\n  methods: {\r\n    handleFileChange() {\r\n      this.file = this.$refs.fileInput.files[0];\r\n    },\r\n    async uploadFile() {\r\n      const formData = new FormData();\r\n      formData.append(\"titleName\", this.titleName);\r\n      formData.append(\"titleDescription\", this.titleDescription);\r\n      formData.append(\"titleFile\", this.file);\r\n\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://your-backend-endpoint\",\r\n          formData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          }\r\n        );\r\n\r\n        console.log(\"Upload successful:\", response.data);\r\n      } catch (error) {\r\n        console.error(\"Upload failed:\", error.message);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;uBACEA,mBAAA,CASM,c,gBARJC,mBAAA,CAAkE;IAA3DC,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,SAAS,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAvBH,KAAA,CAAAC,SAAS,E,mBACrCH,mBAAA,CAGY;+DAFDE,KAAA,CAAAI,gBAAgB,GAAAF,MAAA;IACzBC,WAAW,EAAC;iDADHH,KAAA,CAAAI,gBAAgB,E,GAG3BN,mBAAA,CAAgE;IAAzDC,IAAI,EAAC,MAAM;IAACM,GAAG,EAAC,WAAW;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;kDAE5DV,mBAAA,CAA2C;IAAlCa,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,UAAA,IAAAH,QAAA,CAAAG,UAAA,IAAAJ,IAAA,CAAU;KAAE,QAAM,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}